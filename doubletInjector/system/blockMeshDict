/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;

vertices
(
    (0		-3	-0.5)	//0
    (6		-3	-0.5)	//1
    (6.05	-3	-0.5)	//2
    (6.05	-13	-0.5)	//3
    (56	-13	-0.5)	//4
    (56	-3	-0.5)	//5
    (56	3	-0.5)	//6
    (56	13	-0.5)	//7
    (6.05	13	-0.5)	//8
    (6.05	3	-0.5)	//9
    (6		3	-0.5)	//10
    (0		3	-0.5)	//11
    (0		-3	0.5)	//12
    (6		-3	0.5)	//13
    (6.05	-3	0.5)	//14
    (6.05	-13	0.5)	//15
    (56	-13	0.5)	//16
    (56	-3	0.5)	//17
    (56	3	0.5)	//18
    (56	13	0.5)	//19
    (6.05	13	0.5)	//20
    (6.05	3	0.5)	//21
    (6		3	0.5)	//22
    (0		3	0.5)	//23
);

blocks
(
    hex (0 1 10 11 12 13 22 23) (10 50 1) simpleGrading (1 1 1)
    hex (1 2 9  10 13 14 21 22) (1  50 1) simpleGrading (1 1 1)
    hex (2 5 6  9  14 17 18 21) (80 50 1) simpleGrading (1 1 1)
    hex (2 3 4  5  14 15 16 17) (80 80 1) simpleGrading (1 1 1)
    hex (9 6 7  8  21 18 19 20) (80 80 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    walls
    {
        type wall;
        faces
        (
            (0  1  13 12)
            (2  3  15 14)      
            (8  9  21 20)
            (10 11 23 22)
            (11 0  12 23)
        );
    }

    lowerInlet
    {
        type patch;
        faces
        (
            (1 2 14 13)
        );
    }

    upperInlet
    {
        type patch;
        faces
        (
            (9 10 22 21)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (4 5 17 16)
            (5 6 18 17)
            (6 7 19 18)
            (3 4 16 15)
            (7 8 20 19)
        );
    }

    frontAndBack
    {
        type symmetry;
        faces
        (
            (0 1 10 11)
            (1 2 9  10)
            (2 3 4  5)
            (2 5 6  9)
            (9 6 7  8)
            
            (12 13 22 23)
            (13 14 21 22)
            (14 15 16 17)
            (14 17 18 21)
            (21 18 19 20)
        );
    }
);

// ************************************************************************* //
